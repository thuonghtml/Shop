@using PagedList;
@using Shop.Models;
@using PagedList.Mvc;

@model IPagedList<Shop.Models.GetListBlogMain_Result>
 <script>
     function truncateText(selector, maxLength) {
         var element = document.querySelector(selector),    
             truncated = element.innerText;

         if (truncated.length > maxLength) {
             truncated = truncated.substr(0, maxLength) + '...';
         }
         return truncated;
     }
 </script>
@if (Model != null)
{
    foreach (GetListBlogMain_Result item in Model)
    {
        <div class="p-b-63">
            <a href="blog-detail.html" class="hov-img0 how-pos5-parent">
                <img src="../../@item.Photo" alt="IMG-BLOG" width="825" height="413">

                <div class="flex-col-c-m size-123 bg9 how-pos5">
                    <span class="ltext-107 cl2 txt-center">
                        @item.TimeCreate.Substring(0,2)
                    </span>

                    <span class="stext-109 cl3 txt-center">
                        @item.TimeCreate.Substring(3,item.TimeCreate.Length-3)
                    </span>
                </div>
            </a>

            <div class="p-t-32">
                <h4 class="p-b-15">
                    <a target="_blank" href="@Url.Action("DetailsBlog", "Home", new { id = item.Id })" class="ltext-108 cl2 hov-cl1 trans-04">
                        @item.BlogName
                    </a>
                </h4>

                <p  class="stext-117 cl6">
                    <div class="conetentblog">
                        @Html.Raw(item.Content)
                    </div> 
                    @*@Html.Raw(!String.IsNullOrEmpty(item.Content) ? item.Content.Substring(0, Math.Min(item.Content.Length, 2)) : item.Content)*@
                </p>
                <div class="flex-w flex-sb-m p-t-18">
                    <span class="flex-w flex-m stext-111 cl2 p-r-30 m-tb-10">
                        <span>
                            <span class="cl4">By</span> @item.EmployeeName
                            <span class="cl12 m-l-4 m-r-6">|</span>
                        </span>

                        <span>
                           @item.Tag
                            <span class="cl12 m-l-4 m-r-6">|</span>
                        </span>

                        @*<span>
                            8 Comments
                        </span>*@
                    </span>

                    <a target="_blank" href="@Url.Action("DetailsBlog", "Home", new { id = item.Id })" class="stext-101 cl2 hov-cl1 trans-04 m-tb-10">
                        Continue Reading

                        <i class="fa fa-long-arrow-right m-l-9"></i>
                    </a>
                </div>
            </div>
        </div>
    }
        <style>

            .pagination li a {
                color: black;
                float: left;
                padding: 8px 16px;
                text-decoration: none;
                transition: background-color .3s;
            }

            .pagination li.active {
                background-color: #1abc9c;
                color: white;
            }

            .pagination li:hover:not(.active) {
                background-color: #ddd;
            }
        </style>
        <div class="flex-c-m flex-w w-full p-t-45">
            @Html.PagedListPager(Model, page => Url.Action("GetBlogByTag", new { page }),
                                          new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
        </div>



    }
    <script>
    tag = '@ViewBag.Tag'
    $(".pagination li a").on('click', function (e) {
        e.preventDefault();
        if (!($(this).parent().hasClass('active'))) {
            var href = $(this).attr("href")
            console.log(href)
            $.ajax({
                type: "GET",
                url: href,
                contentType: "application/json; charset=utf-8",
                data: { "tag": tag},
                success: function (data) {
                    //debugger;
                    $("#contentBlog").html(data)
                    $('.conetentblog').each(function (index, item) {
                        var txt = $(this).text();
                        if (txt.length > 200)
                            $(this).text(txt.substr(0, 200) + '.....');
                    })
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            })
        }
        })
        var RenderContentProduct = function (data) {
            $("#mymodal1").empty();
            $("#mymodal1").append(data)

            $('.js-modal1').addClass('show-modal1');
        }
        $(".js-show-modal1").click(function (e) {
            e.preventDefault();
            //debugger;
            var $buttonClicked = $(this);
            var id = $buttonClicked.attr('data-id');
            var options = { "backdrop": "static", keyboard: true };
            $.ajax({
                type: "GET",
                url: '/Home/GetProductByIdModal',
                contentType: "application/json; charset=utf-8",
                data: { "Id": id },
                datatype: "json",
                success: function (data) {
                    //debugger;
                    RenderContentProduct(data);
                },
                error: function () {
                    alert("Dynamic content load failed.");
                }
            });
        });
    </script>


